//中文文档http://www.jquery123.com/

jQuery is a JavaScript Library

Basic syntax is: $(selector).action()

$(document).ready(function(){
   // jQuery methods go here...
});
prevent any jQuery code from running before the document is finished loading 
$(function(){
   // jQuery methods go here...
});

selector:  $(selector).action()
  $("*")
  $(this)
  $("p, p.intro, #id, .class1")
  
  $("div p") //all p that are descendants of div
  $("div>p|div~p|div+p") //direct child,siblings,next

  $("p:first|last|odd|even")
  $("ul li:first")        //first <li> element of the first <ul>

  $("p:(only|first|last)-child|nth-(last)-child(n)")
  $("p:(only|first|last)-of-type|nth-(last)-of-type(n)")
  $("ul li:first-child")  //first <li> element of every <ul>

  $("tr:eq(3)|gt(3)|lt(3)") //fourth element,great than four, less than
  $("tr:not(:eq(3))") //all except four element

  $("a[target='_blank'|!='_blank']")
  $("[href(^|$|*)='hello']") //start with, end with ,contain
  $("[href|='hello']") //start with or start with followed by hyphen

  $(":root|parent|header|animated|focus|empty")
  $("div:has(p)|p:hidden|table:visible|p:lang(de)")
  $(":contains('hello')")

  $(":input")
  //input element with type as follows
  $(":text|password|radio|checkbox|submit|reset|button|image|file")
  $(":enable|disable|selected|checked")

event: para is function
  Mouse:    click|dbclick|mouseenter|mouseleave|hover|mousedown|mouseup
  Keyboard: keypress|keydown|keyup
  Form:     focus|blur|submit|change
  Document/Window: load|unload|resize|scroll
  on() method
  tips:
    $("p").mouseenter(function(){//action here});
    hover() method is a combination mouseenter() and mouseleave() methods.
      eg:$("h1").hover(function(){},function(){});
    blur() form field loses focus
    $("p").on({click:function(){}, dbclick:function(){}});

jquery effects:
  hide and show:
    $(selector).hide(speed,callback);
    $(selector).show(speed,callback);
    $(selector).toggle(speed,callback);
      speed:slow|fast|milliseconds
      callback function to be executed after method completes
  fade:
    $(selector).fadeOut(speed,callback);
    $(selector).fadeIn(speed,callback);
    $(selector).fadeToggle(speed,callback);
    $(selector).fadeTo(speed,opacity,callback);
  slide:
    $(selector).slideDown(speed,callback);
    $(selector).slideUp(speed,callback);
    $(selector).slideToggle(speed,callback);
  animate:
    $(selector).animate({css json)},speed,callback);
    eg:
      $(function(){
        $("button").click(function(){
          var div = $("div");
          div.animate({"width":"300px","height":"100px"},"slow");
          div.animate({"width":"300px","height":"300px"},"slow");
          div.animate({"width":"100px","height":"300px"},"slow");
          div.animate({"width":"100px","height":"100px"},"slow");
        });
      });
  stop:
    $(selector).stop();
    eg:
      $(function(){
        $("#flip").click(function(){
          $("#panel").slideDown(5000);
        });
        $(".button").click(function(){
          $("#panel").stop();
        });
      })

html:
  html() //Sets or returns content(including HTML markup)
  text() //Sets or returns content
  val()  //Sets or returns value of form fields
  attr() //Sets or returns attribute values
  eg:
    $("#btn1").click(function(){
      $("#test1").text("Hello world!");
    });
    $("#btn2").click(function(){
      $("#test2").html("<b>Hello world!</b>");
    });
    $("#btn3").click(function(){
      $("#input").val("Dolly Duck");
    });
    $("#btn4").click(functin(){
      //$("#test4").attr("href","www.google.com");
      $("#test4").attr("href",function(i,oldValue){
        return oldValue + "/jquery";
      });
    });

add and remove html:
  append() - Inserts at the end of the selected elements
  prepend() - Inserts at the beginning of
  after() - Inserts after
  before() - Inserts before
  empty() - Removes the child elements
  remove() - Removes the selected element,can  accepts one parameter
  eg.
    $("button").click(function(){
      $("p").append("<h3>hello1</h3>",$("<h3></h3>").text("hello2"));
    });
    //remove all p element with class="test" or class="demo"
    $("p").remove(".test, .demo");
    //create element
    function appendText() {
      var txt1 = "<p>Text.</p>";               // Create element with HTML  
      var txt2 = $("<p></p>").text("Text.");   // Create with jQuery
      var txt3 = document.createElement("p");  // Create with DOM
      txt3.innerHTML = "Text.";
      $("body").append(txt1, txt2, txt3);      // Append the new elements 
    }

jquery css:
  addClass()    - Adds one or more classes,separate with whitespace
  removeClass() - Removes one or more classes
  toggleClass() - Toggles between adding/removing classes
  css()         - Sets or returns the style attribute
  eg.
    <style>
      .blue {color: blue;}
      .large {font-size: 30px;}
    </style>
    $("h1, h2, p").addClass("blue large");
    $("h3").css({"color":"red","text-decoration":"line-through"});

  demension:
    width() //content
    height()
    innerWidth() //content+padding
    innerHeight()
    outerWidth() //content+padding+border
    outerHeight()
    outerWidth(true) //content+padding+border+margin
    outerHeight(true)
    eg.
      $(document).width();
      $("div").width(500).height(500);

traverse: (eg. div>(ul>li>span)+(p.test>span)+h1+h2)
  $("span").parent()|parents()|parents("ul")|parentsUntil("div");
    //li+p, li+ul+p+div, ul, ul+li+p
  $("div").children()|children("p.test")|find("span")|find("*");
    //ul+p+h1+h2, p, span, ul+li+h1+h2+p+span
  $("p").siblings()|siblings("h2")|next()|nextAll()|nextUntil(h2);
    //ul+h1+h2, h2, h1, h1+h2, h1
    $("h1").prev()|prevAll()|prevUntil("ul");
      //p, p+ul, p
  filter: (eg. (div>p*4)+(div>(h1+p.test+p))
    $("div p").first()|last(); //first|last p in first|last div
    $("p").eq(1); //second p element
    $("p").filter(".test")|not(".test");
      //the same as $("p.test")|$("p:not(".test")")

AJAX: Asynchronous JavaScript and XML.
  $(selector).load(URL,data,callback);
    //callback is function(responseTxt,statusTxt,xhr){}
      //resulting content, success or error, XMLHttpRequest object
    //change the selector value
  $.get(URL,callback);
  $.post(URL,data,callback);
    //callback is function(data,status){}
      //status is success or error  
jquery noconflict
  The noConflict() method releases the hold on the $ shortcut identifier.
  eg.
    var jq = $.noConflict();
    jq(function(){}); //or jQuery(function(){});
  
jquery properties:
  $().jquery; //current version of jquery
  $("li").length;
  jQuery.fx.interval = 500;
  jQuery.fx.off = true|false; //animation should be disabled or enabled


1.different between hide()|remove()|detach()
  hide()   sets CSS display property to none.
  remove() removes elements from the DOM completely.
  detach() like remove(), but keeps the stored data and events.


